{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true,
    "jest/globals": true
  },
  "extends": [
    "prettier",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "import",
    "jest",
    "unused-imports"
  ],
  "ignorePatterns": [
    "build",
    "*.config.js",
    "node_modules",
    "build/*",
    "config/*",
    ",.eslintrc.js",
    "package.json",
    "tsconfig.json",
    "tsconfig.test.json",
    ",*.json",
    "testCoverage/*",
    "reports/*"
  ],
  "rules": {
    "curly": "error",
    "import/extensions": 0,
    "global-require": [
      0
    ],
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error",
          "info",
          "clear"
        ]
      }
    ],
    "no-var": "error",
    "radix": "error",
    "semi": "error",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "prefer-arrow-callback": 1,
    "default-case": "warn",
    "no-trailing-spaces": 1,
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true,
        "ignoreTrailingComments": true,
        "ignoreUrls": true
      }
    ],
    "no-bitwise": 2,
    "no-multiple-empty-lines": 2,
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-debugger": 1,
    "no-duplicate-imports": "error",
    "no-empty": "error",
    "no-eval": "error",
    "@typescript-eslint/ban-types": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-unused-vars": 0,
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "pathGroups": [
          {
            "pattern": "^(common)",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "^(~src)",
            "group": "parent"
          },
          {
            "pattern": "^\\.+",
            "group": "sibling"
          }
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase",
          "snake_case"
        ],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase",
          "snake_case"
        ],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "parameter",
        "format": [
          "camelCase",
          "PascalCase",
          "snake_case"
        ],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "memberLike",
        "modifiers": [
          "private"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^T[A-Z]",
          "match": true
        }
      },
      {
        "selector": "enum",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^E[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-implicit-dependencies": 0
  }
}